<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>Simple Animation</title>

<!--
Simple animation program.

-Michael Weeks, October 2019
-->

<script type="application/javascript">
// <![CDATA[
var INTERVAL = 50;
var DEBUG = false; //true;

var canvas;             // The canvas shown on the page.
var ctx;                // The context, used to access the canvas.

var SpriteRow = 0;      // Row of the graphic to show
var SpriteCol = 0;      // Col of the graphic to show
var MaxSpriteRow = 8;   // How many rows of images
var MaxSpriteCol = 8;  // How many columns of images

var SpriteX = 100;      // Position of sprite on the canvas
var SpriteY = 100;
var SpriteWidth = 32;   // Width, Height of each subimage
var SpriteHeight = 32;

var SpriteX2 = 450;      // Position of sprite on the canvas
var SpriteY2 = 350;
var SpriteWidth2 = 32;   // Width, Height of each subimage
var SpriteHeight2 = 32;

var SpriteXBalloon = 300;      // Position of sprite on the canvas
var SpriteYBalloon = 300;
var SpriteWidthBalloon = 32;   // Width, Height of each subimage
var SpriteHeightBalloon = 32;

var SpriteImage = new Image();   // Sprite sheet
var SpriteImage2 = new Image();   // Sprite sheet
var SpriteImageBalloon = new Image();

SpriteImage.src   = "Pounce2.png";
SpriteImage2.src = "gsuG.png";
SpriteImageBalloons.src = "Balloons.png";

// Set up a timer to execute every 50 ms.
var myInterval;


function eraseSprite() {
  // erase sprite
  ctx.clearRect(SpriteX, SpriteY, SpriteWidth, SpriteHeight);
  ctx.clearRect(SpriteX2, SpriteY2, SpriteWidth2, SpriteHeight2);
  ctx.clearRect(SpriteXBalloon, SpriteYBalloon, SpriteWidthBalloon, SpriteHeightBalloon);
}



function drawSprite() {
  // draw sprite
  //ctx.drawImage(SpriteImage, SpriteX, SpriteY);
  ctx.drawImage(SpriteImage, SpriteCol * SpriteWidth, SpriteRow * SpriteHeight,
    SpriteWidth, SpriteHeight, SpriteX, SpriteY, SpriteWidth, SpriteHeight);

  ctx.drawImage(SpriteImage2, SpriteCol *SpriteWidth2, SpriteRow * SpriteHeight2,
  SpriteWidth2, SpriteHeight2, SpriteX2, SpriteY2, SpriteWidth2, SpriteHeight2);

  ctx.drawImage(SpriteImageBalloons, SpriteCol * SpriteWidthBalloon, SpriteRow * SpriteHeightBalloon,
  SpriteWidthBalloon, SpriteHeightBalloon, SpriteXBalloon, SpriteYBalloon, SpriteWidthBalloon, SpriteHeightBalloon);

// update the next image to show
// SpriteCol++;
if (SpriteCol >= MaxSpriteCol)
  SpriteCol = 0;
}


function Tick() {

// Erase the sprite from its current location.
eraseSprite();

// Show a new image
drawSprite();
}


function loadComplete() {
console.log("Load is complete.");
canvas = document.getElementById("theCanvas");
ctx = canvas.getContext("2d");
myInterval = self.setInterval(function(){Tick()}, INTERVAL);
}

// What to do when the user presses a key.
function whenKeyPressed(key) {
switch (key) {
  case 28:  // Right arrow was pressed
        SpriteX = SpriteX + 1;
      break;
    case 29:  // Left arrow, ASCII 29
        SpriteX = SpriteX - 1;
      break;
    case 30:  // Up arrow was pressed
      // Go up a row
      SpriteY = SpriteY - 1;
     //  if (SpriteRow < 0)
        // SpriteX = MaxSpriteRow - 1;
     SpriteCol = 0; // reset column to first image
      break;
    case 31:  // Down arrow was pressed
      // Go down a row
      SpriteY = SpriteY + 1;
      // if (SpriteRow >= MaxSpriteRow)
        // SpriteRow = 0;
      SpriteCol = 0; // reset column to first image
      break;

    case 32: // A key was pressed
        // Go left
        SpriteX2 = SpriteX2 - 1;
        break;
    case 33: // D key was pressed
        // Go right
        SpriteX2 = SpriteX2 + 1;
        break;
        case 34: // S key was pressed
        // Go down
        SpriteY2 = SpriteY2 + 1;
        break;
    case 35: // W key pressed
        // Go up
        SpriteY2 = SpriteY2 - 1;
        break;
  }
}
///]]>
</script>

</head>
<body onload="loadComplete()" bgcolor="#0f0000" text="#ffffff">

<center>
  <canvas id="theCanvas" tabindex="1" width="640" height="480"></canvas>
<h2>Press up/down to see different rows</h2>
</center>

<script type="application/javascript">
  //
  // Set up a function to handle key-presses.
  //
  // This should work across most browsers.
  document['onkeydown'] = function(event) {
    event = event || window.event;
    var key = event.which || event.cursor;
        // Check for a special key value, and map it to ASCII.
        switch (key) {
      case 37:  // Left arrow, ASCII 29
        key = 29;
        break;
      case 38:  // Up arrow, ASCII 30
        key = 30;
        break;
      case 39:  // Right arrow, ASCII 28
        key = 28;
        break;
      case 40:  // Down arrow, ASCII 31
        key = 31;
        break;

      case 65:  // A key, ASCII 97
        key = 32;
        break;
      case 68:  // D key, ASCII 100
        key = 33;
        break;
      case 83: // S key, ASCII 115
        key = 34;
        break;
      case 87: // W key, ASCII 119
        key = 35;
        break;
    }
    //document.getElementById("keydown").innerHTML =
       //  " key Down event, keycode " + key;
       console.log(key);
       whenKeyPressed(key);
  };
</script>


</body></html>
